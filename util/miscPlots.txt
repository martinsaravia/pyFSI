p = pScatter(solution)
p.set(yLabel='Flow Rate - $\mathbf{Q}$',
      xLabel='Throat size - $\mathit{h}$',
      title=r'FSI Harvester - Eigenvalue progression',
      xlim=[-100, 100],
      ylim=[-750, 750])


anim = pAnimation(p,
                  name="eigenSolution",
                  frames=len(solution),
                  xlim=[-100, 100],
                  ylim=[-750, 750]
                  )


# import post
# from post.plots import pScatter, pBifurcation
# import post
# from post.plots import pScatter, pBifurcation
# importlib.reload(post.plots)
# p0 = pBifurcation(solution)
# p0.set(ylim=[0, 750])
# p0.plot()
#
#
# plt.close('all')
# for i, sol in enumerate(solution):
#     p = pScatter(solution)
#     p.plot(i)

# printStateMatrix(solution[0][0])