<?xml version="1.0"?>

<precice-configuration>

  <log enabled="1">
    <sink filter="%Severity% > debug" />
  </log>

  <solver-interface dimensions="3">

    <!-- Data fields that are exchanged between the solvers -->
    <data:vector name="UTop"/>
    <data:vector name="VTop"/>
    <data:vector name="ATop"/>
    <data:vector name="FTop"/>
    <data:vector name="UBot"/>
    <data:vector name="VBot"/>
    <data:vector name="ABot"/>
    <data:vector name="FBot"/>

    <!-- A common mesh that uses these data fields -->
    <mesh name="Solid_Top">
        <use-data name="UTop"/>
        <use-data name="VTop"/>
        <use-data name="FTop"/>
    </mesh>

    <mesh name="Fluid_Top">
        <use-data name="UTop"/>
        <use-data name="VTop"/>
        <use-data name="FTop"/>
    </mesh>

    <mesh name="Solid_Bot">
        <use-data name="UBot"/>
        <use-data name="VBot"/>
        <use-data name="FBot"/>
    </mesh>

    <mesh name="Fluid_Bot">
        <use-data name="UBot"/>
        <use-data name="VBot"/>
        <use-data name="FBot"/>
    </mesh>

    <!-- Represents each solver using preCICE. In a coupled simulation, two participants have to be
         defined. The name of the participant has to match the name given on construction of the
         precice::SolverInterface object used by the participant. -->

    <participant name="FLOW">
      <!-- Makes the named mesh available to the participant. Mesh is provided by the solver directly. -->
        <use-mesh name="Fluid_Top" provide="yes"/>
        <use-mesh name="Fluid_Bot" provide="yes"/>
        <use-mesh name="Solid_Top" from="STRUCTURE"/>
        <use-mesh name="Solid_Bot" from="STRUCTURE"/>
      <!-- Define input/output of the solver.  -->
        <write-data name="FTop" mesh="Fluid_Top"/>
        <write-data name="FBot" mesh="Fluid_Bot"/>
        <read-data name="UTop" mesh="Solid_Top"/>
        <read-data name="VTop" mesh="Solid_Top"/>
        <read-data name="UBot" mesh="Solid_Bot"/>
        <read-data name="VBot" mesh="Solid_Bot"/>
      <mapping:nearest-projection direction="write" from="Fluid_Nodes" to="Structure_Nodes" constraint="consistent" timing="initial"/>
      <mapping:nearest-projection direction="read"  from="Structure_Nodes" to="Fluid_Nodes" constraint="consistent" timing="initial"/>
    </participant>

    <participant name="STRUCTURE">
      <use-mesh name="Structure_Nodes" provide="yes"/>
      <write-data name="CrossSectionLength" mesh="Structure_Nodes"/>
      <read-data  name="Pressure"      mesh="Structure_Nodes"/>
    </participant>

    <!-- Communication method, use TCP sockets, Change network to "ib0" on SuperMUC -->
    <m2n:sockets from="FLUID" to="STRUCTURE"/>

      <coupling-scheme:serial-implicit>
         <participants first="FLUID" second="STRUCTURE"/>
         <max-time value="1.0"/>
         <time-window-size value=".01" valid-digits="8"/>
         <max-iterations value="100"/>
         <exchange data="Pressure" mesh="Structure_Nodes" from="FLUID" to="STRUCTURE" />
         <exchange data="CrossSectionLength" mesh="Structure_Nodes" from="STRUCTURE" to="FLUID" initialize="true"/>
         <relative-convergence-measure data="Pressure" mesh="Structure_Nodes" limit="1e-5"/>
         <relative-convergence-measure data="CrossSectionLength" mesh="Structure_Nodes" limit="1e-5"/>
         <extrapolation-order value="0"/>
         <acceleration:IQN-ILS>
	    <!--PostProc always done on the second participant-->
            <data name="CrossSectionLength" mesh="Structure_Nodes"/>
            <initial-relaxation value="0.01"/>
            <max-used-iterations value="100"/>
            <time-windows-reused value="8"/>
            <filter type="QR2" limit="1e-3"/>
         </acceleration:IQN-ILS>
      </coupling-scheme:serial-implicit>

  </solver-interface>
</precice-configuration>